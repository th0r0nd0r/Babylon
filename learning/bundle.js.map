{"version":3,"sources":["webpack:///webpack/bootstrap 71f31781976bdf7a67d2","webpack:///./babylon.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA,qDAAqD;;AAErD,8CAA8C;;;AAG9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,2DAA2D,WAAW;;AAEtE;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oDAAoD,qDAAqD;;AAEzG;AACA;;AAEA;;AAEA,8BAA8B;;AAE9B;;AAEA;;AAEA,kCAAkC;AAClC;AACA,CAAC;;;AAGD,+CAA+C;AAC/C;AACA,CAAC,E","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 71f31781976bdf7a67d2","var canvas = document.getElementById(\"renderCanvas\"); // Get the canvas element \n\nvar engine = new BABYLON.Engine(canvas, true); // Generate the BABYLON 3D engine\n\n\n/******* Add the create scene function ******/\nvar createScene = function () {\n\n  // Create the scene space\n  var scene = new BABYLON.Scene(engine);\n\n  // Add a camera to the scene and attach it to the canvas\n  var camera = new BABYLON.ArcRotateCamera(\"Camera\", Math.PI / 2, Math.PI / 2, 2, BABYLON.Vector3.Zero(), scene);\n  camera.attachControl(canvas, true);\n\n  // Add lights to the scene\n  var light1 = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(1, 1, 0), scene);\n  var light2 = new BABYLON.PointLight(\"light2\", new BABYLON.Vector3(0, 1, -1), scene);\n\n\n  // Add and manipulate meshes in the scene\n  var sphere = BABYLON.MeshBuilder.CreateSphere(\"sphere\", {diameter:2}, scene);\n\n  // making a box and coloring its faces\n  const boxColors = new Array(6);\n\n  boxColors[1] = new BABYLON.Color4(1,0,1,0);\n  boxColors[2] = new BABYLON.Color4(1,1,1,0);\n  boxColors[3] = new BABYLON.Color4(1,0,0,0);\n  boxColors[4] = new BABYLON.Color4(1,0,0,1);\n\n  const box = BABYLON.MeshBuilder.CreateBox(\"box\", {height: 2, width: 5, depth: 4, faceColors: boxColors}, scene);\n\n  return scene;\n};\n\n    /******* End of the create scene function ******/    \n\n    var scene = createScene(); //Call the createScene function\n\nscene.enablePhysics();\n\nvar ground = BABYLON.Mesh.CreateGround(\"ground1\", 16, 16, 2, scene);\n\nengine.runRenderLoop(function () { // Register a render loop to repeatedly render the scene\n        scene.render();\n});\n\n\nwindow.addEventListener(\"resize\", function () { // Watch for browser/canvas resize events\n        engine.resize();\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./babylon.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}